package assert

var v = map[string][]byte{"kk.js":[]byte{0xa,0xa,0xa,0x65,0x63,0x68,0x6f,0x28,0x22,0x5b,0x6b,0x6b,0x2e,0x6a,0x73,0x5d,0x20,0x4f,0x4b,0x22,0x29,0x3b,0xa},
	"require.js":[]byte{0xa,0x28,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x28,0x29,0x7b,0xa,0x9,0x76,0x61,0x72,0x20,0x6d,0x6f,0x64,0x75,0x6c,0x65,0x73,0x20,0x3d,0x20,0x7b,0x7d,0x3b,0xa,0x9,0x72,0x65,0x71,0x75,0x69,0x72,0x65,0x20,0x3d,0x20,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x28,0x70,0x61,0x74,0x68,0x29,0x20,0x7b,0xa,0x9,0x9,0x76,0x61,0x72,0x20,0x6d,0x20,0x3d,0x20,0x6d,0x6f,0x64,0x75,0x6c,0x65,0x73,0x5b,0x70,0x61,0x74,0x68,0x5d,0x3b,0xa,0x9,0x9,0x69,0x66,0x28,0x6d,0x20,0x3d,0x3d,0x3d,0x20,0x75,0x6e,0x64,0x65,0x66,0x69,0x6e,0x65,0x64,0x29,0x20,0x7b,0xa,0x9,0x9,0x9,0x6d,0x20,0x3d,0x20,0x7b,0x20,0x65,0x78,0x70,0x6f,0x72,0x74,0x73,0x20,0x3a,0x20,0x7b,0x7d,0x20,0x7d,0x3b,0xa,0x9,0x9,0x9,0x74,0x72,0x79,0x20,0x7b,0xa,0x9,0x9,0x9,0x9,0x76,0x61,0x72,0x20,0x66,0x6e,0x20,0x3d,0x20,0x63,0x6f,0x6d,0x70,0x69,0x6c,0x65,0x28,0x70,0x61,0x74,0x68,0x2c,0x27,0x28,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x28,0x6d,0x6f,0x64,0x75,0x6c,0x65,0x2c,0x65,0x78,0x70,0x6f,0x72,0x74,0x73,0x29,0x7b,0x27,0x2c,0x27,0x7d,0x29,0x27,0x29,0x3b,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x28,0x74,0x79,0x70,0x65,0x6f,0x66,0x20,0x66,0x6e,0x20,0x3d,0x3d,0x20,0x27,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x27,0x29,0x20,0x7b,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6e,0x20,0x3d,0x20,0x66,0x6e,0x28,0x29,0x3b,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x28,0x74,0x79,0x70,0x65,0x6f,0x66,0x20,0x66,0x6e,0x20,0x3d,0x3d,0x20,0x27,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x27,0x29,0x20,0x7b,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6e,0x28,0x6d,0x2c,0x6d,0x2e,0x65,0x78,0x70,0x6f,0x72,0x74,0x73,0x29,0x3b,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x20,0x65,0x6c,0x73,0x65,0x20,0x7b,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x63,0x68,0x6f,0x28,0x22,0x5b,0x52,0x45,0x51,0x55,0x49,0x54,0x45,0x5d,0x20,0x5b,0x45,0x52,0x52,0x4f,0x52,0x5d,0x20,0x22,0x20,0x2b,0x20,0x28,0x74,0x79,0x70,0x65,0x6f,0x66,0x20,0x66,0x6e,0x29,0x20,0x2b,0x20,0x22,0x5c,0x6e,0x22,0x29,0x3b,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x20,0x65,0x6c,0x73,0x65,0x20,0x7b,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x63,0x68,0x6f,0x28,0x22,0x5b,0x52,0x45,0x51,0x55,0x49,0x54,0x45,0x5d,0x20,0x5b,0x45,0x52,0x52,0x4f,0x52,0x5d,0x20,0x4e,0x6f,0x74,0x20,0x46,0x6f,0x75,0x6e,0x64,0x20,0x22,0x20,0x2b,0x20,0x70,0x61,0x74,0x68,0x2b,0x20,0x22,0x5c,0x6e,0x22,0x29,0x3b,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0xa,0x9,0x9,0x9,0x7d,0x20,0x63,0x61,0x74,0x63,0x68,0x28,0x65,0x29,0x20,0x7b,0xa,0x9,0x9,0x9,0x9,0x65,0x63,0x68,0x6f,0x28,0x65,0x2e,0x74,0x6f,0x53,0x74,0x72,0x69,0x6e,0x67,0x28,0x29,0x2b,0x20,0x22,0x5c,0x6e,0x22,0x29,0x3b,0xa,0x9,0x9,0x9,0x7d,0xa,0x9,0x9,0x9,0x6d,0x6f,0x64,0x75,0x6c,0x65,0x73,0x5b,0x70,0x61,0x74,0x68,0x5d,0x20,0x3d,0x20,0x6d,0x3b,0xa,0x9,0x9,0x7d,0xa,0x9,0x9,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6d,0x2e,0x65,0x78,0x70,0x6f,0x72,0x74,0x73,0x3b,0xa,0x9,0x7d,0x3b,0xa,0x7d,0x29,0x28,0x29,0x3b,0xa}}


func Get(name string) ([]byte,bool) {
	 vv,ok := v[name]
	 return vv,ok
}

func Each(fn func(name string,data []byte) bool) bool {
	 for name,data := range v {
		 if !fn(name,data) {
		 return false
		 }
	 }
	 return true
}
